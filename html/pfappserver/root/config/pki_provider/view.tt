
[% IF c.action.name == "view"  %]
[% SET action_uri = c.uri_for(c.controller.action_for('update'), [ item.id ]) %]
[%ELSE%]
[% SET action_uri = c.req.uri %]
[% END %]
<style>
.pki_alert {
    padding: 10px;
    background-color: #f44336;
    color: white;
    display: table;
    margin: 0 auto;
    z-index: 15;
    display:none;
}

.closebtn {
    margin-left: 15px;
    color: white;
    font-weight: bold;
    float: right;
    font-size: 22px;
    line-height: 20px;
    cursor: pointer;
    transition: 0.3s;
}

.closebtn:hover {
    color: black;
}
</style>
<form name="modalItem" class="form-horizontal form-condensed" action="[% action_uri %]" method="post">
  [%- IF item.id %]<input type="hidden" name="id" value="[% item.id | html %]">[% END %]
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&times;</a>
    <h3>[% IF item %]<i>[% l('PKI Provider') %]</i> [% item.id | html %][% ELSE %][% l('New PKI Provider') %][% END %]</h3>
  </div>

  <div class="alert pki_alert">
    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
    <span id="pki_alert_error_text"></span>
  </div>

  <div class="modal-body pki-group">
    <p style="padding-left: 27px; padding-bottom: 5px;">When uploading, make sure the file is within 1MB (1 megabyte or 1000000 bytes) and in .pem format.</p>
    [% form.field('id').render | none UNLESS item && item.id.defined %]
    <div class="pki-group">
    [% form.block('definition').render | none %]
    </div>
  </div><!--modal-body-->

  <div class="modal-footer">
    <a href="#" class="btn" data-dismiss="modal">[% l('Close') %]</a>
    [% IF can_access("PKI_PROVIDER_UPDATE") %]<button class="btn btn-primary" id="savePKI" data-loading-text="[% l('Saving') %]">[% l('Save') %]</button>[% END %]
  </div>

</form>
<script>
$(document).ready(function(){
  document.getElementById("client_cert_path").onchange = function(){
    showFileSize();
    processFiles();
  };
  document.getElementById("client_cert_path").onchange = function(){
    showFileSize();
    processFiles();
  };
  document.getElementById("client_cert_path").onchange = function(){
    showFileSize();
    processFiles();
  };
});

function showFileSize() {
    console.log(" in show file size");
    var input3, input4;
    var file3, file4;
    var filePath, fileSize;

    if (!window.FileReader) {
        alert("The File API isn't supported on this browser please change to Google Chrome.");
        return;
    }

    input3 = document.getElementById('ca_cert_path');
    input4 = document.getElementById('server_cert_path');


    console.log("ca_cert_path: " + input3);
    console.log("server_cert_path: " + input4);

    console.log("ca_cert_path: " + file3);
    console.log("server_cert_path: " + file4);


    if (!input3 || !input4) {
        alertFile("p", "Couldn't find the file input element.");
    }
    else if (!input3.files || !input4.files) {
        alertFile("p", "This browser doesn't support the `files` property of file inputs.");
    }
    else if (!input3.files[0] || !input4.files[0]) {
        alertFile("p", "Please select a file before clicking 'Save'");
    }
    else {
        file3 = input3.files[0];
        file4 = input4.files[0];

        fileType3 = file3.type;
        fileType4 = file4.type;

        fileSize3 = file3.size/1024/1024;
        fileSize4 = file4.size/1024/1024;

        console.log(" \nca_cert: " + file3 + " \nserver_cert: " + file4);
        console.log(" \nca_cert type: " + fileType3 + " \nserver_cert type: " + fileType4);

        // console.log(fileTypeValidation(input4));
        console.log(fileTypeValidation(input3));

        if (fileTypeValidation(input3) == TRUE){
            if (file.size < 1){
                processFiles();
            }
            else{
                alert("File size is greater than 1MB. Upload again.");
            }
        } else {
            alert("Incorrect file type. Upload again. Make sure the file type is .pem.");
        }
    }
}

//test file types
function fileTypeValidation(file){
    var filePath = file.value;
    var allowedExtensions = /(\.pem)$/i;
    if(!allowedExtensions.exec(filePath)){
        alert('Upload file having extensions .pem only.');
        fileInput.value = '';
        return false;
    }else{
        return true;
    }
}


//shows alert balloon when there is an error.
function alertFile(tagName, innerHTML) {
    console.log("in body append");
    var elm;
    elm = document.createElement(tagName);
    elm.innerHTML = innerHTML;
    console.log(elm);
    $(".controls").append(elm);

    $("#pki_alert_error_text").append = elm;
    $("#pki_alert_error_text").slideDown();
}

//call only when save button is pressed
function processFiles(){
  console.log("in process files function");
  var base_url = window.location.origin;
  //check if the scep modal is open or the a3 PKI modal
    $.ajax({
        type: 'POST',
        url: base_url + 'admin/configuration/pki_provider/processCertificate/' + "scep",
        success: function(){
        },
        error: function(XMLHttpRequest){

        }
}
</script>
